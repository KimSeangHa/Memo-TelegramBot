package com.spring.webservice.utill;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;

import org.apache.ibatis.session.SqlSession;
import org.springframework.beans.factory.annotation.Autowired;
import org.telegram.telegrambots.bots.TelegramLongPollingBot;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;

public class TelegramBot extends TelegramLongPollingBot {
	
   	@Autowired
	private SqlSession sqlSession;
   	
    private final String BOT_NAME = "Kim_Scheduler_Bot"; //Bot Name
    private final String AUTH_KEY = "1334891991:AAGkrXOd3oPP92tQzRclNY4nmxwuvMPIUqM"; //Bot Auth-Key
    // private final String CHAT_ID = "-381510796";
    //private final String CHAT_ID = "-381510796"; //Chat ID 616043197
    
    @Override 
   public void onUpdateReceived(Update update) {
    	
    	System.out.println(update);
    	System.out.println(update.getMessage().getText());
    	
    	String getOriginText = update.getMessage().getText();
    	String getText = getOriginText.replaceAll("/", "");
    	
    	SendMessage message = new SendMessage();
    	long CHAT_ID = update.getMessage().getChatId();
    	
    	message.setChatId(CHAT_ID);
    	message.setText("스케줄러 봇이 곰곰이 생각중입니다. \n잠시만 기다려주세요.");
    	
		try {
			execute(message);
		} catch (TelegramApiException e) {
			e.printStackTrace();
		}
    	
		//등록하기 
		String Register = getText.substring(0, 3);
		
		if ( Register.equals("REG")) {
			String[] InsertData = getText.split("@");
			String MEMBER_ID = InsertData[1];
			System.out.println(InsertData[0]);
			long BOT_CHAT_ID = CHAT_ID;
			String BOT_TOKEN = AUTH_KEY;
			
			int aa = InsertBotInfo(MEMBER_ID, CHAT_ID);
		}
		
		
		// MEMBER_NUM 가져오기
    	int MEMBER_NUM = getMEMBER_NUM(CHAT_ID);
    	
    	if ( getText.length() != 8 ) {
        	message.setChatId(CHAT_ID);
        	message.setText("날짜를 잘못입력하였습니다. \n20200823 형태로 입력해주세요.");
        	
    		try {
    			execute(message);
    		} catch (TelegramApiException e) {
    			e.printStackTrace();
    		}
    		
    	} else {
    		String date = getText.substring(0,4) + "-" + getText.substring(4,6) + "-" + getText.substring(6,8) + "%";
    	
    		System.out.println("###" + date);
    		
	    	/* DB Connection */
	    	String sqlHost = "jdbc:mysql://localhost:3306/webservice?useSSL=false&characterEncoding=UTF-8&serverTimezone=UTC";
	    	String user = "root";
	    	String pw = "root";
	    	
	    	try {
	          String myDriver = "com.mysql.cj.jdbc.Driver";
	          Class.forName(myDriver);
	          Connection conn = DriverManager.getConnection(sqlHost, user, pw);
	          
	          String query = "SELECT "
          						+ "REPLACE(CONTENT, \"%0A\", \"\\n\") AS CONTENT "
          						+ ", ID "
          						+ "FROM MEMO "
          						+ "WHERE REGDATE LIKE " + "\"" + date + "\""
          						+ "AND MEMBER_NUM =" + MEMBER_NUM;
	
	          Statement st = conn.createStatement();
	          
	          ResultSet rs = st.executeQuery(query);
	          
	          System.out.println("@@@@@");
	          System.out.println(query);
	          
	          if(rs.isBeforeFirst()) {
		          while (rs.next()) {
		            String Content = rs.getString("CONTENT");
		            String id = rs.getString("ID");
		            
		            System.out.format(Content, id);
		    		
		            message.setText(Content);
		    		message.setChatId(CHAT_ID);
		    		
		    		try {
		    			execute(message);
		    		} catch (TelegramApiException e) {
		    			e.printStackTrace();
		    		}
		          }
	          } else {
	            message.setText("등록된 스케줄이 없습니다. \n스케줄을 등록해주세요.");
	    		message.setChatId(CHAT_ID);
	    		
	    		try {
	    			execute(message);
	    		} catch (TelegramApiException e) {
	    			e.printStackTrace();
	    		}
	          }
	          
	          st.close();
	        } catch (Exception e) {
	          System.err.println("Got an exception! ");
	          System.err.println(e.getMessage());
	        }
    	}
   }

   @Override 
   public String getBotUsername() {
        // TODO 
       return BOT_NAME;
   }

   @Override 
   public String getBotToken() {
        // TODO 
       return  AUTH_KEY;
   }
   
   // ChatID를 통한 MEMBER_NUM 가져오기
   public int getMEMBER_NUM(long CHAT_ID) {
	   
	/* DB Connection */
	String sqlHost = "jdbc:mysql://localhost:3306/webservice?useSSL=false&characterEncoding=UTF-8&serverTimezone=UTC";
	String user = "root";
	String pw = "root";
	
	try {
	    String myDriver = "com.mysql.cj.jdbc.Driver";
	    Class.forName(myDriver);
	    Connection conn = DriverManager.getConnection(sqlHost, user, pw);
	 
		String query = "SELECT "
			+ "MEMBER_NUM "
			+ "FROM BOT_INFO "
			+ "WHERE CHAT_ID =" + CHAT_ID;
	
	 	Statement st = conn.createStatement();
	 
	 	ResultSet rs = st.executeQuery(query);
		 
		System.out.println("@@@@@");
		System.out.println(query);
		 
		 if(rs.isBeforeFirst()) {
		      while (rs.next()) {
		        int MEMBER_NUM = rs.getInt("MEMBER_NUM");
		        
		        System.out.println(MEMBER_NUM);
		        return MEMBER_NUM;

		      }
		 } else {
		   int MEMBER_NUM = 0;
		   return MEMBER_NUM;
	     }
	     
	     st.close();
	   } catch (Exception e) {
	     System.err.println("Got an exception! ");
	     System.err.println(e.getMessage());
       }
	  return 0;
   }
   
   // Insert Data
   public int InsertBotInfo(String MEMBER_IDD, long CHAT_ID) {
	  
	   SimpleDateFormat dateformat = new SimpleDateFormat ( "yyyy-MM-dd HH:mm:ss");
	   
	   Date time = new Date();
	   String CurrentTime = dateformat.format(time);
	   
	   System.out.println("###" + CurrentTime);
	   
		/* DB Connection */
		String sqlHost = "jdbc:mysql://localhost:3306/webservice?useSSL=false&characterEncoding=UTF-8&serverTimezone=UTC";
		String user = "root";
		String pw = "root";
		
		try {
		    String myDriver = "com.mysql.cj.jdbc.Driver";
		    Class.forName(myDriver);
		    Connection conn = DriverManager.getConnection(sqlHost, user, pw);
		    
		    System.out.println("!@#!@#@!#@!#!@!@#");
			String query = "SELECT "
				+ "MEMBER_NUM "
				+ "FROM MEMBER "
				+ "WHERE MEMBER_ID = " + MEMBER_IDD + " ";
		
		 	Statement st = conn.createStatement();
		 	ResultSet rs = st.executeQuery(query);
			 
			System.out.println("@@@@@");
			System.out.println(query);
			 
			 if(rs.isBeforeFirst()) {
			      while (rs.next()) {
			        int MEMBER_NUM = rs.getInt("MEMBER_NUM");
			        
			        String InsertQuery = "INSERT INTO BOT_INFO (MEMBER_NUM, CHAT_ID, BOT_REGDATE)"
			        		+ "VALUES ("
			        		+ MEMBER_NUM 
			        		+ "," + CHAT_ID
			    			+ "," + CurrentTime
			    			+ ")";
			        
		    	 	ResultSet InsertResult = st.executeQuery(InsertQuery);
		    	 	
			        System.out.println("!@#@!#!@" + InsertResult);
			        return 0;
	
			      }
			 } else {
			   return 1;
		     }
		     
			 st.close();
	   } catch (Exception e) {
	     System.err.println("Got an exception! ");
	     System.err.println(e.getMessage());
       }
	  return 1;
   }
}
