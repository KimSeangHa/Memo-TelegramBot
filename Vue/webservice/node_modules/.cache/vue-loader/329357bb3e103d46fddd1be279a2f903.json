{"remainingRequest":"C:\\Users\\kshma\\Documents\\Vue\\webservice\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\kshma\\Documents\\Vue\\webservice\\src\\components\\memo\\MemoForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\kshma\\Documents\\Vue\\webservice\\src\\components\\memo\\MemoForm.vue","mtime":1598947003225},{"path":"C:\\Users\\kshma\\Documents\\Vue\\webservice\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\kshma\\Documents\\Vue\\webservice\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\kshma\\Documents\\Vue\\webservice\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\kshma\\Documents\\Vue\\webservice\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnDQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgICBuYW1lOiAnTWVtb0Zvcm0nLA0KICAgIGRhdGE6IGZ1bmN0aW9uICgpIHsNCiAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgIGNvbnRlbnQ6ICcnLA0KICAgICAgICB9DQogICAgfSwNCiAgICBtZXRob2RzOiB7DQogICAgICAgIHJlc2V0ICgpIHsNCiAgICAgICAgICAgIHRoaXMuY29udGVudCA9ICcnDQogICAgICAgIH0sDQogICAgICAgIGFkZE1lbW8gKCkgeyANCiAgICAgICAgICAgIGlmICggY29udGVudCA9PT0gJycpIHsNCiAgICAgICAgICAgICAgICBhbGVydCgi64K07Jqp7J2EIOyeheugpe2VtOyjvOyEuOyalC4iKQ0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgDQogICAgICAgICAgICBjb25zdCB7IGNvbnRlbnQsIG1lbWJlcl90b2tlbiB9ID0gdGhpcw0KICAgICAgICAgICAgY29uc3QgaWQgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKQ0KICAgICAgICAgICAgY29uc3QgcmVnRGF0ZSA9IHRoaXMuJG1vbWVudCgpLmZvcm1hdCgnWVlZWS1NTS1ERCBISDptbTpzcycpDQogICAgICAgICAgICBjb25zdCBjdXJEYXRlID0gdGhpcy4kbW9tZW50KCkuZm9ybWF0KCdZWVlZLU1NLUREJykNCiAgICAgICAgICAgIGNvbnNvbGUubG9nKGN1ckRhdGUpOw0KICAgICAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdtZW1vL2FkZE1lbW8nLCB7IGNvbnRlbnQsIGlkLCByZWdEYXRlLCBjdXJEYXRlLCBtZW1iZXJfdG9rZW4gfSkNCiAgICAgICAgICAgIHRoaXMucmVzZXQoKQ0KICAgICAgICB9LA0KICAgICAgICBNYWtlYm90ICgpIHsNCiAgICAgICAgICAgIGF4aW9zLnBvc3QoJ2h0dHA6Ly9sb2NhbGhvc3Q6OTA5MC93ZWJzZXJ2aWNlL01ha2Vib3QnLCB7IA0KICAgICAgICAgICAgICAgIG1lbWJlcl90b2tlbjogdGhpcy5tZW1iZXJfdG9rZW4NCiAgICAgICAgICAgIH0pDQogICAgICAgICAgICAudGhlbigocmVzdWx0KSA9PiB7DQogICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzdWx0KQ0KICAgICAgICAgICAgICAgIGlmIChyZXN1bHQuc3RhdHVzID09PSAyMDApIHsNCiAgICAgICAgICAgICAgICAgICAgaWYocmVzdWx0LmRhdGEgPT09IDEwMCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdsb2dpbi9Mb2dvdXQnLCB7IE1lbWJlclRva2VuOiB0aGlzLm1lbWJlclRva2VuIH0pDQogICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICAgICBhbGVydCgiQm90IOyDneyEsSDsmYTro4wgISIpDQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICBhbGVydCgiQm90IOyDneyEsSDsi6TtjKguIOq0gOumrOyekOyXkOqyjCDrrLjsnZjtlbTso7zshLjsmpQuIikNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9KQ0KICAgICAgICAgICAgLmNhdGNoKGUgPT4gew0KICAgICAgICAgICAgICAgIGFsZXJ0KCJFcnJvciA6IOq0gOumrOyekOyXkOqyjCDrrLjsnZjtlbTso7zshLjsmpQuIikNCiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlKQ0KICAgICAgICAgICAgfSkgDQogICAgICAgIH0sDQogICAgICAgIGVudGVyRnVuYyAoKSB7DQogICAgICAgICAgICBjb25zb2xlLmxvZygnYWFhJykNCiAgICAgICAgICAgIGNvbnN0IGVudGVyID0gJ1xuJw0KICAgICAgICAgICAgdGhpcy5jb250ZW50ID0gdGhpcy5jb250ZW50ICsgZW50ZXINCiAgICAgICAgICAgIGNvbnNvbGUubG9nKHRoaXMuY29udGVudCkNCiAgICAgICAgfQ0KICAgIH0sDQogICAgY29tcHV0ZWQ6IHsNCiAgICAgICAgbWVtYmVyX3Rva2VuOiBmdW5jdGlvbigpIHsNCiAgICAgICAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5sb2dpbi5sb2dpblRva2VuDQogICAgICAgIH0NCiAgICB9DQp9DQo="},{"version":3,"sources":["MemoForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAwBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MemoForm.vue","sourceRoot":"src/components/memo","sourcesContent":["<template>\r\n    <div >\r\n        <p class=\"MemoAdd-text\"><img :src=\"require(`@/assets/images/memo_icon.png`)\" class=\"memoImg\" />Add Memo</p>\r\n        <p class=\"MemoAdd-text telegram\" @click=\"Makebot\"><img :src=\"require(`@/assets/images/telegram.jpg`)\" class=\"memoImg\" />Make Bot</p>\r\n        <div class=\"memo-form\">\r\n            <!-- <ckeditor :editor=\"editor\" v-model=\"content\"></ckeditor> -->\r\n            <textarea \r\n                v-model=\"content\" \r\n                class=\"memo-content\" \r\n                placeholder=\"내용을 입력해주세요.\"\r\n                @keydown.enter.exact.prevent\r\n                @keyup.enter.exact=\"enterFunc\"\r\n                @keydown.enter.shift.exact=\"enterFunc\"\r\n            >\r\n            </textarea>\r\n            <br>\r\n            <div style=\"text-align: right;\">\r\n                <button button class=\"addMemoBtn\" @click=\"addMemo\">등록</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n    name: 'MemoForm',\r\n    data: function () {\r\n        return {\r\n            content: '',\r\n        }\r\n    },\r\n    methods: {\r\n        reset () {\r\n            this.content = ''\r\n        },\r\n        addMemo () { \r\n            if ( content === '') {\r\n                alert(\"내용을 입력해주세요.\")\r\n                return false\r\n            }\r\n            \r\n            const { content, member_token } = this\r\n            const id = new Date().getTime()\r\n            const regDate = this.$moment().format('YYYY-MM-DD HH:mm:ss')\r\n            const curDate = this.$moment().format('YYYY-MM-DD')\r\n            console.log(curDate);\r\n            this.$store.commit('memo/addMemo', { content, id, regDate, curDate, member_token })\r\n            this.reset()\r\n        },\r\n        Makebot () {\r\n            axios.post('http://localhost:9090/webservice/Makebot', { \r\n                member_token: this.member_token\r\n            })\r\n            .then((result) => {\r\n                console.log(result)\r\n                if (result.status === 200) {\r\n                    if(result.data === 100) {\r\n                        this.$store.commit('login/Logout', { MemberToken: this.memberToken })\r\n                    } else {\r\n                        alert(\"Bot 생성 완료 !\")\r\n                    }\r\n                } else {\r\n                    alert(\"Bot 생성 실패. 관리자에게 문의해주세요.\")\r\n                }\r\n            })\r\n            .catch(e => {\r\n                alert(\"Error : 관리자에게 문의해주세요.\")\r\n                console.log(e)\r\n            }) \r\n        },\r\n        enterFunc () {\r\n            console.log('aaa')\r\n            const enter = '\\n'\r\n            this.content = this.content + enter\r\n            console.log(this.content)\r\n        }\r\n    },\r\n    computed: {\r\n        member_token: function() {\r\n            return this.$store.state.login.loginToken\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n.memo-form {\r\n    border: 1px solid #ccc;\r\n    border-left: none;\r\n    border-right: none;\r\n    border-top: none;\r\n    padding: 20px;\r\n    margin: 20px;\r\n    padding-bottom: 40px;\r\n    padding-top: 0px;\r\n    position: relative;\r\n}\r\n\r\n.memoImg {\r\n    width: 30px;\r\n    height: 30px;\r\n    margin-right: 5px;\r\n    margin-bottom: 3px;\r\n}\r\n\r\n.MemoAdd-text {\r\n    font-size: 18px;\r\n    margin-left: 40px;\r\n    margin-top: 30px;\r\n    display: inline-block;\r\n}\r\n\r\n.telegram {\r\n    float: right;\r\n    margin-right: 40px;\r\n    cursor: pointer;\r\n}\r\n.memo-content {\r\n    width: 100%;\r\n    height: 100px;\r\n}\r\n\r\n.addMemoBtn {\r\n    width: 80px;\r\n    height: 40px;\r\n    margin-top: 20px;\r\n    position: relative;\r\n    border: 1px solid #ddd;\r\n    background-color : #fff;\r\n    border-radius: 8px;\r\n    font-size: 14px;\r\n}\r\n\r\n.addMemoBtn:hover {\r\n    background-color : #172d58;\r\n    color:#fff;\r\n}\r\n</style>"]}]}