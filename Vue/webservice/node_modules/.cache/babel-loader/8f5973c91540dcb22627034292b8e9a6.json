{"remainingRequest":"C:\\Users\\kshma\\Documents\\Vue\\webservice\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\kshma\\Documents\\Vue\\webservice\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\kshma\\Documents\\Vue\\webservice\\src\\store\\modules\\memo.js","dependencies":[{"path":"C:\\Users\\kshma\\Documents\\Vue\\webservice\\src\\store\\modules\\memo.js","mtime":1597819415925},{"path":"C:\\Users\\kshma\\Documents\\Vue\\webservice\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\kshma\\Documents\\Vue\\webservice\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\kshma\\Documents\\Vue\\webservice\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlIjsKZXhwb3J0IGRlZmF1bHQgewogIC8qKg0KICAgKiDtlZjquLAg7ZWt66qp65Ok7JeQIG5hbWVzcGFjZeulvCDsgqzsmqntlanri4jri6QuDQogICAqIFtnZXR0ZXJzLCBhY3Rpb25zLCBtdXRhaW9uc10NCiAgICovCiAgbmFtZXNwYWNlZDogdHJ1ZSwKCiAgLyoqDQogICAqIGNvbXBvbmVudOydmCBkYXRh7JmAIOycoOyCrO2VnCDsl63tlaDsnYQg7ZWp64uI64ukLg0KICAgKiDsu7Ttj6zrhIztirgg64K07JeQ7IScIOywuOyhsOuwqeuylQ0KICAgKiAxLiB0aGlzLiRzdG9yZS5zdGF0ZS5zYW1wbGUudG9kb3MNCiAgICogMi4gY29tcHV0ZWQ6IHsgLi4ubWFwU3RhdGUoJ3NhbXBsZScsIFsndG9kb3MnXSkgfQ0KICAgKi8KICBzdGF0ZTogewogICAgbWVtb0xpc3Q6IFtdCiAgfSwKCiAgLyoqDQogICAqIGNvbXBvbmVudOydmCBjb21wdXRlZOyZgCDsnKDsgqztlZwg7Jet7ZWg7J2EIO2VqeuLiOuLpC4NCiAgICog7Lu07Y+s64SM7Yq4IOuCtOyXkOyEnCDssLjsobDrsKnrspUNCiAgICogY29tcHV0ZWQ6IHsgLi4ubWFwR2V0dGVycygnc2FtcGxlJywgWyd0b2Rvc0NvdW50J10pIH0NCiAgICovCiAgZ2V0dGVyczogewogICAgdG9kb3NDb3VudDogZnVuY3Rpb24gdG9kb3NDb3VudChzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUudG9kb3MubGVuZ3RoOwogICAgfQogIH0sCgogIC8qKg0KICAgKiBjb21wb25lbnTsnZggbWV0aG9kc+yZgCDsnKDsgqztlZwg7Jet7ZWg7J2EIO2VqeuLiOuLpC4NCiAgICogc3RhdGXrpbwg67OA6rK97ZWgIOuVjCDsgqzsmqntlanri4jri6QuDQogICAqIHRoaXMuJHN0b3JlLmNvbW1pdCgnc2FtcGxlL3NldFRvZG9zJywgW3BheWxvYWRdKQ0KICAgKi8KICBtdXRhdGlvbnM6IHsKICAgIC8qKg0KICAgICAqIOuplOuqqCDrk7HroZ0NCiAgICAgKg0KICAgICAqIEBwYXJhbSB7b2JqZWN0fSBzdGF0ZQ0KICAgICAqIEBwYXJhbSB7YXJyYXl9IHBheWxvYWQNCiAgICAgKi8KICAgIGFkZE1lbW86IGZ1bmN0aW9uIGFkZE1lbW8oc3RhdGUsIHBheWxvYWQpIHsKICAgICAgY29uc29sZS5sb2coJyMjIGFkZE1lbW8gIyMnKTsKICAgICAgdmFyIG1lbW9EYXRhID0gewogICAgICAgIGNvbnRlbnQ6IHBheWxvYWQuY29udGVudCwKICAgICAgICBpZDogcGF5bG9hZC5pZAogICAgICB9OwogICAgICBzdGF0ZS5tZW1vTGlzdC5wdXNoKG1lbW9EYXRhKTsKICAgICAgdGhpcy5odHRwLnBvc3QoKSgnaHR0cDovL2xvY2FsaG9zdDo5MDkwL3dlYnNlcnZpY2UvYWRkTWVtbycsIHBheWxvYWQudGl0bGUpLnRoZW4oZnVuY3Rpb24gKHJlc3VsdCkgewogICAgICAgIGNvbnNvbGUubG9nKHJlc3VsdCk7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlKSB7CiAgICAgICAgY29uc29sZS5sb2coZSk7CiAgICAgIH0pOwogICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnbWVtb0xpc3QnLCBKU09OLnN0cmluZ2lmeShzdGF0ZS5tZW1vTGlzdCkpOwogICAgfSwKCiAgICAvKioNCiAgICAgKiDrqZTrqqgg7IKt7KCcDQogICAgICoNCiAgICAgKiBAcGFyYW0ge29iamVjdH0gc3RhdGUNCiAgICAgKiBAcGFyYW0ge2FycmF5fSBwYXlsb2FkDQogICAgICovCiAgICBkZWxldGVNZW1vOiBmdW5jdGlvbiBkZWxldGVNZW1vKHN0YXRlLCBwYXlsb2FkKSB7CiAgICAgIGNvbnNvbGUubG9nKCcjIyBEZWxldGVNZW1vICMjJyk7CiAgICAgIHN0YXRlLm1lbW9MaXN0LnNwbGljZShwYXlsb2FkLmluZGV4LCAxKTsKICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ21lbW9MaXN0JywgSlNPTi5zdHJpbmdpZnkoc3RhdGUubWVtb0xpc3QpKTsKICAgIH0KICB9LAoKICAvKioNCiAgICogY29tcG9uZW507J2YIG1ldGhvZOyZgCDsnKDsgqztlZwg7Jet7ZWg7J2EIO2VqeuLiOuLpC4NCiAgICog67mE64+Z6riwIOyymOumrOulvCDtlanri4jri6QuDQogICAqIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdzYW1wbGUvZ2V0VG9kb3MsIFtwYXlsb2FkXSkNCiAgICovCiAgYWN0aW9uczoge30KfTs="},{"version":3,"sources":["C:/Users/kshma/Documents/Vue/webservice/src/store/modules/memo.js"],"names":["namespaced","state","memoList","getters","todosCount","todos","length","mutations","addMemo","payload","console","log","memoData","content","id","push","http","post","title","then","result","catch","e","localStorage","setItem","JSON","stringify","deleteMemo","splice","index","actions"],"mappings":";AAAA,eAAe;AACX;;;;AAIAA,EAAAA,UAAU,EAAE,IALD;;AAOX;;;;;;AAMAC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE;AADL,GAbI;;AAiBX;;;;;AAKAC,EAAAA,OAAO,EAAE;AACPC,IAAAA,UAAU,EAAE,oBAAAH,KAAK,EAAI;AACnB,aAAOA,KAAK,CAACI,KAAN,CAAYC,MAAnB;AACD;AAHM,GAtBE;;AA4BX;;;;;AAKAC,EAAAA,SAAS,EAAE;AACX;;;;;;AAMCC,IAAAA,OAPU,mBAODP,KAPC,EAOMQ,OAPN,EAOe;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACC,UAAMC,QAAQ,GAAG;AAAEC,QAAAA,OAAO,EAAEJ,OAAO,CAACI,OAAnB;AAA4BC,QAAAA,EAAE,EAAEL,OAAO,CAACK;AAAxC,OAAjB;AACAb,MAAAA,KAAK,CAACC,QAAN,CAAea,IAAf,CAAoBH,QAApB;AAEA,WAAKI,IAAL,CAAUC,IAAV,GAAiB,0CAAjB,EAA6DR,OAAO,CAACS,KAArE,EACKC,IADL,CACU,UAACC,MAAD,EAAY;AACdV,QAAAA,OAAO,CAACC,GAAR,CAAYS,MAAZ;AACH,OAHL,EAIKC,KAJL,CAIW,UAAAC,CAAC,EAAI;AACRZ,QAAAA,OAAO,CAACC,GAAR,CAAYW,CAAZ;AACH,OANL;AAOAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAezB,KAAK,CAACC,QAArB,CAAjC;AACD,KApBQ;;AAqBX;;;;;;AAMCyB,IAAAA,UA3BU,sBA2BE1B,KA3BF,EA2BSQ,OA3BT,EA2BkB;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAV,MAAAA,KAAK,CAACC,QAAN,CAAe0B,MAAf,CAAsBnB,OAAO,CAACoB,KAA9B,EAAqC,CAArC;AACAN,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAezB,KAAK,CAACC,QAArB,CAAjC;AACF;AA/BQ,GAjCA;;AAmEX;;;;;AAKA4B,EAAAA,OAAO,EAAE;AAxEE,CAAf","sourcesContent":["export default {\r\n    /**\r\n     * 하기 항목들에 namespace를 사용합니다.\r\n     * [getters, actions, mutaions]\r\n     */\r\n    namespaced: true,\r\n  \r\n    /**\r\n     * component의 data와 유사한 역할을 합니다.\r\n     * 컴포넌트 내에서 참조방법\r\n     * 1. this.$store.state.sample.todos\r\n     * 2. computed: { ...mapState('sample', ['todos']) }\r\n     */\r\n    state: {\r\n      memoList: []\r\n    },\r\n  \r\n    /**\r\n     * component의 computed와 유사한 역할을 합니다.\r\n     * 컴포넌트 내에서 참조방법\r\n     * computed: { ...mapGetters('sample', ['todosCount']) }\r\n     */\r\n    getters: {\r\n      todosCount: state => {\r\n        return state.todos.length\r\n      }\r\n    },\r\n  \r\n    /**\r\n     * component의 methods와 유사한 역할을 합니다.\r\n     * state를 변경할 때 사용합니다.\r\n     * this.$store.commit('sample/setTodos', [payload])\r\n     */\r\n    mutations: {\r\n    /**\r\n     * 메모 등록\r\n     *\r\n     * @param {object} state\r\n     * @param {array} payload\r\n     */\r\n     addMemo (state, payload) {\r\n       console.log('## addMemo ##')\r\n        const memoData = { content: payload.content, id: payload.id }\r\n        state.memoList.push(memoData)\r\n\r\n        this.http.post()('http://localhost:9090/webservice/addMemo', payload.title)\r\n            .then((result) => {\r\n                console.log(result)\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n            })\r\n        localStorage.setItem('memoList', JSON.stringify(state.memoList))\r\n      },\r\n    /**\r\n     * 메모 삭제\r\n     *\r\n     * @param {object} state\r\n     * @param {array} payload\r\n     */\r\n     deleteMemo (state, payload) {\r\n         console.log('## DeleteMemo ##')\r\n         state.memoList.splice(payload.index, 1)\r\n         localStorage.setItem('memoList', JSON.stringify(state.memoList))\r\n      }\r\n    },\r\n  \r\n    /**\r\n     * component의 method와 유사한 역할을 합니다.\r\n     * 비동기 처리를 합니다.\r\n     * this.$store.dispatch('sample/getTodos, [payload])\r\n     */\r\n    actions: {}\r\n  }\r\n  "]}]}